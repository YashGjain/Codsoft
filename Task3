import java.io.*;
import java.util.*;

class Student {
    private String name;
    private int rollNumber;
    private int grade;

    public Student(String name, int rollNumber, int grade) {
        this.name = name;
        this.rollNumber = rollNumber;
        this.grade = grade;
    }

    public String getName() {
        return name;
    }

    public int getRollNumber() {
        return rollNumber;
    }

    public int getGrade() {
        return grade;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setRollNumber(int rollNumber) {
        this.rollNumber = rollNumber;
    }

    public void setGrade(int grade) {
        this.grade = grade;
    }

    @Override
    public String toString() {
        return "Name: " + name + ", Roll Number: " + rollNumber + ", Grade: " + grade;
    }
}

class StudentManagementSystem {
    private List<Student> students;

    public StudentManagementSystem() {
        this.students = new ArrayList<>();
    }

    public void addStudent(Student student) {
        students.add(student);
    }

    public void removeStudent(int rollNumber) {
        students.removeIf(student -> student.getRollNumber() == rollNumber);
    }

    public Student searchStudent(int rollNumber) {
        for (Student student : students) {
            if (student.getRollNumber() == rollNumber) {
                return student;
            }
        }
        return null;
    }

    public void displayAllStudents() {
        for (Student student : students) {
            System.out.println(student.toString());
        }
    }

    public void saveToFile(String filename) {
        try (PrintWriter writer = new PrintWriter(new FileWriter(filename))) {
            for (Student student : students) {
                writer.println(student.getName() + "," + student.getRollNumber() + "," + student.getGrade());
            }
        } catch (IOException e) {
            System.out.println("Error saving to file: " + e.getMessage());
        }
    }

    public void loadFromFile(String filename) {
        try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                Student student = new Student(parts[0], Integer.parseInt(parts[1]), Integer.parseInt(parts[2]));
                addStudent(student);
            }
        } catch (IOException e) {
            System.out.println("Error loading from file: " + e.getMessage());
        }
    }
}

public class Main {
    public static void main(String[] args) {
        StudentManagementSystem studentManagementSystem = new StudentManagementSystem();
        String filePath = "C:\\Users\\yashg\\OneDrive\\Desktop\\students.txt";
        studentManagementSystem.loadFromFile(filePath);

        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("1. Add a new student");
            System.out.println("2. Edit an existing student's information");
            System.out.println("3. Search for a student");
            System.out.println("4. Display all students");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter student name: ");
                    String name = scanner.next();
                    System.out.print("Enter student roll number: ");
                    int rollNumber = scanner.nextInt();
                    System.out.print("Enter student grade: ");
                    String gradeStr = scanner.next();
                    int grade = 0; // default value
                    if (gradeStr.equalsIgnoreCase("A+")) {
                        grade = 90; // or any other value you want to assign to A+
                    } else if (gradeStr.equalsIgnoreCase("A")) {
                        grade = 85; // or any other value you want to assign to A
                    } else if (gradeStr.equalsIgnoreCase("B+")) {
                        grade = 80; // or any other value you want to assign to B+
                    } else {
                        // handle other grades or invalid inputs
                    }
                    Student student = new Student(name, rollNumber, grade);
                    studentManagementSystem.addStudent(student);
                    break;
                case 2:
                    System.out.print("Enter roll number of student to edit: ");
                    int editRollNumber = scanner.nextInt();
                    Student editStudent = studentManagementSystem.searchStudent(editRollNumber);
                    if (editStudent != null) {
                        System.out.print("Enter new name: ");
                        String newName = scanner.next();
                        System.out.print("Enter new grade: ");
                        String newGradeStr = scanner.next();
                        int newGrade = 0; // default value
                        if (newGradeStr.equalsIgnoreCase("A+")) {
                            newGrade = 90; // or any other value you want to assign to A+
                        } else if (newGradeStr.equalsIgnoreCase("A")) {
                            newGrade = 85; // or any other value you want to assign to A
                        } else if (newGradeStr.equalsIgnoreCase("B+")) {
                            newGrade = 80; // or any other value you want to assign to B+
                        } else {
                            // handle other grades or invalid inputs
                        }
                        editStudent.setName(newName);
                        editStudent.setGrade(newGrade);
                    } else {
                        System.out.println("Student not found");
                    }
                    break;
                case 3:
                    System.out.print("Enter roll number of student to search: ");
                    int searchRollNumber = scanner.nextInt();
                    Student searchStudent = studentManagementSystem.searchStudent(searchRollNumber);
                    if (searchStudent != null) {
                        System.out.println(searchStudent.toString());
                    } else {
                        System.out.println("Student not found");
                    }
                    break;
                case 4:
                    studentManagementSystem.displayAllStudents();
                    break;
                case 5:
                    studentManagementSystem.saveToFile(filePath);
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid choice");
            }
        }
    }
}
